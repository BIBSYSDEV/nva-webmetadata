plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.kordamp.gradle.jandex' version '0.8.0'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'nebula.lint' version '16.8.0'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

gradleLint.rules = ['unused-dependency']

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    runtimeOnly 'io.quarkus:quarkus-funqy-amazon-lambda'
    runtimeOnly 'io.quarkus:quarkus-arc'
    implementation group: 'org.apache.any23', name: 'apache-any23-core', version: '2.4'
    implementation group: 'org.apache.any23', name: 'apache-any23-api', version: '2.4'
    implementation group: 'io.quarkus', name: 'quarkus-funqy-server-common', version: '1.10.2.Final'
    implementation group: 'jakarta.enterprise', name: 'jakarta.enterprise.cdi-api', version: '2.0.2'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-repository-sail', version: '3.1.2'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-sail-api', version: '3.1.2'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-model', version: '3.4.4'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-util', version: '3.4.4'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-rio-api', version: '3.4.4'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-query', version: '3.1.2'
    implementation group: 'com.github.jsonld-java', name: 'jsonld-java', version: '0.13.1'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-sail-memory', version: '3.1.2'
    implementation group: 'org.eclipse.rdf4j', name: 'rdf4j-repository-api', version: '3.1.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.3'
    testImplementation group: 'io.quarkus', name: 'quarkus-test-common', version: '1.10.2.Final'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-test-amazon-lambda'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.27.2'

}

group 'no.unit.nva'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}


test {
    useJUnitPlatform()
    failFast = true
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

// jacoco configuration
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.900 //TODO: to be improved after refactor
            }
        }
        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.900 //TODO: to be improved after refactor
            }
        }
    }
}
